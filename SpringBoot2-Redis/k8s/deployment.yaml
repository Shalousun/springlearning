# Copyright 2017 ApplicationPower.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Configuration to deploy release version of the springboot application compatible with
# Kubernetes 1.8.
#
# Example usage: kubectl create -f <this_file>
# ------------------- SpringBoot Application Deployment ------------------- #
apiVersion: apps/v1
kind: Deployment
metadata:
  name: SpringBoot2-Redis-rc
  namespace: default
spec:
  selector:
      matchLabels:
        app: SpringBoot2-Redis
        tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: SpringBoot2-Redis
        tier: backend
    spec:
      containers:
        - name: SpringBoot2-Redis
          image: harbor-registry/test/com.sunyu.redis/SpringBoot2-Redis:1.0-SNAPSHOT
          imagePullPolicy: Always
#          resources:
#            requests:
#              cpu: 100m
#              memory: 100Mi
#            limits:
#              cpu: 100m
#              memory: 100Mi
          ports:
            - containerPort: 8080
      imagePullSecrets:
      - name: harbor-key
---
# ------------------- SpringBoot Application Service ---------------------- #
apiVersion: v1
kind: Service
metadata:
 name: SpringBoot2-Redis-svc
 namespace: default
spec:
 #type: NodePort
 ports:
 - port: 8080
   targetPort: 8080
   #nodePort: 30011
 selector:
  app: SpringBoot2-Redis
  tier: backend
---
# ------------------- SpringBoot Application ingress ---------------------- #
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: SpringBoot2-Redis-ingress
  namespace: default
spec:
  rules:
  - host: spring.boot2.redis.com
    http:
      #port: 80
      paths:
      - path: /
        backend:
          serviceName: SpringBoot2-Redis-svc
          servicePort: 8080