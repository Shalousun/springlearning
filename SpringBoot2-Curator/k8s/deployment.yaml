# Copyright 2017 ApplicationPower.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Configuration to deploy release version of the springboot application compatible with
# Kubernetes 1.8.
#
# Example usage: kubectl create -f <this_file>
# --------------------------- Service ---------------------- #
apiVersion: v1
kind: Service
metadata:
 name: springboot2-curator-svc
 namespace: default
spec:
 #type: NodePort
 ports:
 - port: 8080
   targetPort: 8080
   #nodePort: 30011
 selector:
  app: springboot2-curator
  tier: backend
---
# --------------------------- Deployment ------------------- #
apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot2-curator-deployment
  namespace: default
spec:
  selector:
    matchLabels:
      app: springboot2-curator
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: springboot2-curator
        tier: backend
      annotations:
        prometheus.io/path: '/actuator/prometheus'
        prometheus.io/port: '8080'
        prometheus.io/scrape: 'true'
    spec:
      containers:
        - name: springboot2-curator
          image: your-registry/your-registry-project/com.sunyu.curator/springboot2-curator:1.0
          imagePullPolicy: Always
#          resources:
#            requests:
#              cpu: 100m
#              memory: 100Mi
#            limits:
#              cpu: 100m
#              memory: 100Mi
          env:
              - name:  JAVA_OPTS
              # Override the jvm param setting in dockerfile
                value: "-server -Xmx512m -Xms512m -Djava.awt.headless=true"
#              # from configmap
#              - name: xx-ENV
#                valueFrom:
#                  configMapKeyRef:
#                    name: configmap-meta-name
#                    key: data-key
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 45
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
      - name: harbor-key
---
# --------------------------- ingress ---------------------- #
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: springboot2-curator-ingress
  namespace: default
spec:
  rules:
  - host: spring.boot2.curator.com
    http:
      #port: 80
      paths:
      - path: /
        backend:
          serviceName: springboot2-curator-svc
          servicePort: 8080
---
# --------------------------- HPA ---------------------- #
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: springboot2-curator-hpa
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: springboot2-curator-deployment
  minReplicas: 1
  maxReplicas: 2
  metrics:
  - type: Pods
    pods:
      metricName: http_requests
      targetAverageValue: 10
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 80
  - type: Resource
    resource:
      name: memory
      targetAverageValue: 512Mi
